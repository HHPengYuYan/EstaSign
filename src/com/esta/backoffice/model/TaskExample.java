package com.esta.backoffice.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TaskExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public TaskExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTaskIdIsNull() {
            addCriterion("task_id is null");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNotNull() {
            addCriterion("task_id is not null");
            return (Criteria) this;
        }

        public Criteria andTaskIdEqualTo(Integer value) {
            addCriterion("task_id =", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotEqualTo(Integer value) {
            addCriterion("task_id <>", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThan(Integer value) {
            addCriterion("task_id >", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_id >=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThan(Integer value) {
            addCriterion("task_id <", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanOrEqualTo(Integer value) {
            addCriterion("task_id <=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIn(List<Integer> values) {
            addCriterion("task_id in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotIn(List<Integer> values) {
            addCriterion("task_id not in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdBetween(Integer value1, Integer value2) {
            addCriterion("task_id between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotBetween(Integer value1, Integer value2) {
            addCriterion("task_id not between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdIsNull() {
            addCriterion("administrator_id is null");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdIsNotNull() {
            addCriterion("administrator_id is not null");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdEqualTo(Integer value) {
            addCriterion("administrator_id =", value, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdNotEqualTo(Integer value) {
            addCriterion("administrator_id <>", value, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdGreaterThan(Integer value) {
            addCriterion("administrator_id >", value, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("administrator_id >=", value, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdLessThan(Integer value) {
            addCriterion("administrator_id <", value, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdLessThanOrEqualTo(Integer value) {
            addCriterion("administrator_id <=", value, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdIn(List<Integer> values) {
            addCriterion("administrator_id in", values, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdNotIn(List<Integer> values) {
            addCriterion("administrator_id not in", values, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdBetween(Integer value1, Integer value2) {
            addCriterion("administrator_id between", value1, value2, "administratorId");
            return (Criteria) this;
        }

        public Criteria andAdministratorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("administrator_id not between", value1, value2, "administratorId");
            return (Criteria) this;
        }

        public Criteria andTaskTimeIsNull() {
            addCriterion("task_time is null");
            return (Criteria) this;
        }

        public Criteria andTaskTimeIsNotNull() {
            addCriterion("task_time is not null");
            return (Criteria) this;
        }

        public Criteria andTaskTimeEqualTo(Date value) {
            addCriterionForJDBCDate("task_time =", value, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("task_time <>", value, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("task_time >", value, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("task_time >=", value, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeLessThan(Date value) {
            addCriterionForJDBCDate("task_time <", value, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("task_time <=", value, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeIn(List<Date> values) {
            addCriterionForJDBCDate("task_time in", values, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("task_time not in", values, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("task_time between", value1, value2, "taskTime");
            return (Criteria) this;
        }

        public Criteria andTaskTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("task_time not between", value1, value2, "taskTime");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameIsNull() {
            addCriterion("competition_name is null");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameIsNotNull() {
            addCriterion("competition_name is not null");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameEqualTo(String value) {
            addCriterion("competition_name =", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameNotEqualTo(String value) {
            addCriterion("competition_name <>", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameGreaterThan(String value) {
            addCriterion("competition_name >", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameGreaterThanOrEqualTo(String value) {
            addCriterion("competition_name >=", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameLessThan(String value) {
            addCriterion("competition_name <", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameLessThanOrEqualTo(String value) {
            addCriterion("competition_name <=", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameLike(String value) {
            addCriterion("competition_name like", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameNotLike(String value) {
            addCriterion("competition_name not like", value, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameIn(List<String> values) {
            addCriterion("competition_name in", values, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameNotIn(List<String> values) {
            addCriterion("competition_name not in", values, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameBetween(String value1, String value2) {
            addCriterion("competition_name between", value1, value2, "competitionName");
            return (Criteria) this;
        }

        public Criteria andCompetitionNameNotBetween(String value1, String value2) {
            addCriterion("competition_name not between", value1, value2, "competitionName");
            return (Criteria) this;
        }

        public Criteria andTaskTypeIsNull() {
            addCriterion("task_type is null");
            return (Criteria) this;
        }

        public Criteria andTaskTypeIsNotNull() {
            addCriterion("task_type is not null");
            return (Criteria) this;
        }

        public Criteria andTaskTypeEqualTo(String value) {
            addCriterion("task_type =", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotEqualTo(String value) {
            addCriterion("task_type <>", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeGreaterThan(String value) {
            addCriterion("task_type >", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeGreaterThanOrEqualTo(String value) {
            addCriterion("task_type >=", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeLessThan(String value) {
            addCriterion("task_type <", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeLessThanOrEqualTo(String value) {
            addCriterion("task_type <=", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeLike(String value) {
            addCriterion("task_type like", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotLike(String value) {
            addCriterion("task_type not like", value, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeIn(List<String> values) {
            addCriterion("task_type in", values, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotIn(List<String> values) {
            addCriterion("task_type not in", values, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeBetween(String value1, String value2) {
            addCriterion("task_type between", value1, value2, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotBetween(String value1, String value2) {
            addCriterion("task_type not between", value1, value2, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumIsNull() {
            addCriterion("task_stu_num is null");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumIsNotNull() {
            addCriterion("task_stu_num is not null");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumEqualTo(Integer value) {
            addCriterion("task_stu_num =", value, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumNotEqualTo(Integer value) {
            addCriterion("task_stu_num <>", value, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumGreaterThan(Integer value) {
            addCriterion("task_stu_num >", value, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_stu_num >=", value, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumLessThan(Integer value) {
            addCriterion("task_stu_num <", value, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumLessThanOrEqualTo(Integer value) {
            addCriterion("task_stu_num <=", value, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumIn(List<Integer> values) {
            addCriterion("task_stu_num in", values, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumNotIn(List<Integer> values) {
            addCriterion("task_stu_num not in", values, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumBetween(Integer value1, Integer value2) {
            addCriterion("task_stu_num between", value1, value2, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskStuNumNotBetween(Integer value1, Integer value2) {
            addCriterion("task_stu_num not between", value1, value2, "taskStuNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumIsNull() {
            addCriterion("task_teacher_num is null");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumIsNotNull() {
            addCriterion("task_teacher_num is not null");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumEqualTo(Integer value) {
            addCriterion("task_teacher_num =", value, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumNotEqualTo(Integer value) {
            addCriterion("task_teacher_num <>", value, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumGreaterThan(Integer value) {
            addCriterion("task_teacher_num >", value, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_teacher_num >=", value, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumLessThan(Integer value) {
            addCriterion("task_teacher_num <", value, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumLessThanOrEqualTo(Integer value) {
            addCriterion("task_teacher_num <=", value, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumIn(List<Integer> values) {
            addCriterion("task_teacher_num in", values, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumNotIn(List<Integer> values) {
            addCriterion("task_teacher_num not in", values, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumBetween(Integer value1, Integer value2) {
            addCriterion("task_teacher_num between", value1, value2, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andTaskTeacherNumNotBetween(Integer value1, Integer value2) {
            addCriterion("task_teacher_num not between", value1, value2, "taskTeacherNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumIsNull() {
            addCriterion("joined_num is null");
            return (Criteria) this;
        }

        public Criteria andJoinedNumIsNotNull() {
            addCriterion("joined_num is not null");
            return (Criteria) this;
        }

        public Criteria andJoinedNumEqualTo(Integer value) {
            addCriterion("joined_num =", value, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumNotEqualTo(Integer value) {
            addCriterion("joined_num <>", value, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumGreaterThan(Integer value) {
            addCriterion("joined_num >", value, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("joined_num >=", value, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumLessThan(Integer value) {
            addCriterion("joined_num <", value, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumLessThanOrEqualTo(Integer value) {
            addCriterion("joined_num <=", value, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumIn(List<Integer> values) {
            addCriterion("joined_num in", values, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumNotIn(List<Integer> values) {
            addCriterion("joined_num not in", values, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumBetween(Integer value1, Integer value2) {
            addCriterion("joined_num between", value1, value2, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andJoinedNumNotBetween(Integer value1, Integer value2) {
            addCriterion("joined_num not between", value1, value2, "joinedNum");
            return (Criteria) this;
        }

        public Criteria andCloseTimeIsNull() {
            addCriterion("close_time is null");
            return (Criteria) this;
        }

        public Criteria andCloseTimeIsNotNull() {
            addCriterion("close_time is not null");
            return (Criteria) this;
        }

        public Criteria andCloseTimeEqualTo(Date value) {
            addCriterionForJDBCDate("close_time =", value, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("close_time <>", value, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("close_time >", value, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("close_time >=", value, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeLessThan(Date value) {
            addCriterionForJDBCDate("close_time <", value, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("close_time <=", value, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeIn(List<Date> values) {
            addCriterionForJDBCDate("close_time in", values, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("close_time not in", values, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("close_time between", value1, value2, "closeTime");
            return (Criteria) this;
        }

        public Criteria andCloseTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("close_time not between", value1, value2, "closeTime");
            return (Criteria) this;
        }

        public Criteria andIsCloseIsNull() {
            addCriterion("is_close is null");
            return (Criteria) this;
        }

        public Criteria andIsCloseIsNotNull() {
            addCriterion("is_close is not null");
            return (Criteria) this;
        }

        public Criteria andIsCloseEqualTo(String value) {
            addCriterion("is_close =", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseNotEqualTo(String value) {
            addCriterion("is_close <>", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseGreaterThan(String value) {
            addCriterion("is_close >", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseGreaterThanOrEqualTo(String value) {
            addCriterion("is_close >=", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseLessThan(String value) {
            addCriterion("is_close <", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseLessThanOrEqualTo(String value) {
            addCriterion("is_close <=", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseLike(String value) {
            addCriterion("is_close like", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseNotLike(String value) {
            addCriterion("is_close not like", value, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseIn(List<String> values) {
            addCriterion("is_close in", values, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseNotIn(List<String> values) {
            addCriterion("is_close not in", values, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseBetween(String value1, String value2) {
            addCriterion("is_close between", value1, value2, "isClose");
            return (Criteria) this;
        }

        public Criteria andIsCloseNotBetween(String value1, String value2) {
            addCriterion("is_close not between", value1, value2, "isClose");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task_t
     *
     * @mbg.generated do_not_delete_during_merge Tue Jul 30 22:09:10 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task_t
     *
     * @mbg.generated Tue Jul 30 22:09:10 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}